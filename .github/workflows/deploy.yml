name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      APP_ENV: production
      OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_NAME: ${{ secrets.DB_NAME }}
      AWS_ECR_REPO: ${{ secrets.AWS_ECR_REPO }}
      ECS_EXECUTION_ROLE_ARN: ${{ secrets.ECS_EXECUTION_ROLE_ARN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REPO }}

      - name: Build and push Docker image
        run: |
          docker build --no-cache -t emotion_analysis .
          docker tag emotion_analysis:latest ${{ secrets.AWS_ECR_REPO }}:latest
          docker push ${{ secrets.AWS_ECR_REPO }}:latest

      - name: Render ECS task definition from template
        run: |
          envsubst < ecs-task-def-template.json > task-def.json
          echo "===== DEBUG: task-def.json ====="
          cat task-def.json
          echo "================================"

      - name: Register new ECS task definition
        run: |
          aws ecs register-task-definition --cli-input-json file://task-def.json

      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster emotion_analysis-cluster \
            --service emotion_analysis-service \
            --force-new-deployment
